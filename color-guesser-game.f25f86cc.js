import{g as o,s as M,r as u,t as s,k as B,j as k,c as r,i as c,b,a as G,y as w,F as E}from"./chunks/web.92b2a543.js";import{BoardContainer as D}from"./ui.3df4c920.js";import{M as L}from"./chunks/modal.296329b7.js";import{c as A}from"./chunks/store.bd5d48c1.js";import{t as H}from"./chunks/tooltip.aa2d8a72.js";import{M as R}from"./chunks/cog.60cdac04.js";import{M as N}from"./chunks/eyedropper-variant.9bf79744.js";import"./chunks/arrow-left-top.22a141d1.js";const $=[{label:"Easy",grid:2},{label:"Normal",grid:3},{label:"Hard",grid:4},{label:"Harder",grid:5},{label:"Hardest",grid:6}],Z=["#F44336","#E91E63","#9C27B0","#673AB7","#3F51B5","#2196F3","#03A9F4","#00BCD4","#009688","#4CAF50","#8BC34A","#CDDC39","#FFEB3B","#FFC107","#FF9800","#FF5722","#795548","#607D8B"],[d,x]=A({}),F=t=>t[t.length*Math.random()|0],j=t=>new Array(t*t).fill(0).map(()=>F(Z)),P=t=>{x("difficulty",{...t}),S()},S=()=>{x("colorGrid",j(d.difficulty?.grid??2)),x("color",F(d.colorGrid??[]))},T=s('<svg class="icon" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path fill="currentColor" d="M15.41 16.58L10.83 12l4.58-4.59L14 6l-6 6l6 6l1.41-1.42Z"></path></svg>'),V=(t={})=>(()=>{const e=o(T);return M(e,t,!0,!0),u(),e})(),W=s('<svg class="icon" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path fill="currentColor" d="M8.59 16.58L13.17 12L8.59 7.41L10 6l6 6l-6 6l-1.41-1.42Z"></path></svg>'),X=(t={})=>(()=>{const e=o(W);return M(e,t,!0,!0),u(),e})(),q=s('<div class="bg-primary-dark flex rounded-full p-6 mb-6"></div>'),I=s('<h4 class="section-subheading mb-2">Color Guesser</h4>'),J=s(`<p class="text-sm mb-8">Are you nerd enough to guess a color based on its RGB HEX code? Let's find out!</p>`),K=s('<div class="w-full flex items-center gap-2 p-2 border rounded-xl mb-8"><h5 class="text-left text-sm font-mono font-bold flex-grow ml-2">Difficulty</h5><div class="flex gap-2 items-center"><button class="btn icon"></button><span class="text-sm w-16"></span><button class="btn icon"></button></div></div>'),O=s('<div class="w-full grid sm:grid-cols-2 gap-3"><button class="btn accent py-3"></button><a href="/games" class="btn outline py-3">Back to Games</a></div>'),Q=s('<div class="w-full flex items-center p-2 rounded-xl border"><p class="ml-3 flex-grow">Color code: <!#><!/></p><button class="btn icon"></button></div>'),U=s('<div class="h-full grid gap-3"></div>'),Y=s('<div class="w-full h-full rounded-lg"></div>'),[z,_]=B(!0),tt=()=>{const[t,e]=B(0),n=()=>e(l=>Math.min(l+1,$.length-1)),a=()=>e(l=>Math.max(l-1,0)),f=()=>{_(!1),P($[t()])};return r(L,{class:"flex flex-col items-center text-center w-full",show:z,setShow:_,get children(){return[(()=>{const l=o(q);return c(l,r(N,{class:"text-3xl text-accent"})),l})(),o(I),o(J),(()=>{const l=o(K),i=l.firstChild,p=i.nextSibling,g=p.firstChild,v=g.nextSibling,h=v.nextSibling;return g.$$click=a,c(g,r(V,{})),c(v,()=>$[t()].label),h.$$click=n,c(h,r(X,{})),b(m=>{const C=t()==0,y=t()==$.length-1;return C!==m._v$&&(g.disabled=m._v$=C),y!==m._v$2&&(h.disabled=m._v$2=y),m},{_v$:void 0,_v$2:void 0}),u(),l})(),(()=>{const l=o(O),i=l.firstChild;return i.$$click=f,c(i,()=>d.difficulty==null?"Play":"Restart"),u(),l})()]}})},et=()=>(()=>{const t=o(Q),e=t.firstChild,n=e.firstChild,a=n.nextSibling,[f,l]=G(a.nextSibling),i=e.nextSibling;return c(e,()=>d.color,f,l),H(i,()=>[()=>"Game Settings","top"]),i.$$click=()=>_(p=>!p),c(i,r(R,{})),u(),t})(),lt=()=>{const t=e=>{e==d.color?(console.log("Correct!"),S()):console.log("Wrong guess :(")};return(()=>{const e=o(U);return c(e,r(E,{get each(){return d.colorGrid??[]},children:n=>(()=>{const a=o(Y);return a.$$click=()=>t(n),b(f=>w(a,`background-color: ${n};`,f)),u(),a})()})),b(n=>w(e,`grid-template-columns: repeat(${d.difficulty?.grid}, minmax(0, 1fr));`,n)),e})()},ut=()=>[r(D,{get children(){return r(lt,{})}}),r(et,{}),r(tt,{})];k(["click"]);export{ut as default};
